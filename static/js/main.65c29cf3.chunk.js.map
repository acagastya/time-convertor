{"version":3,"sources":["comp/autoCompleteText.js","comp/helpers/useTime.js","comp/helpers/prepData.js","comp/currentTime.js","comp/footer.js","comp/fromToTime.js","comp/future.js","comp/header.js","comp/help.js","App.js","serviceWorker.js","index.js"],"names":["AutoCompleteText","autofocus","changeValue","clearInput","defaultValue","id","placeholder","options","moment","tz","names","sort","map","el","replace","React","useState","suggestions","setSuggestions","inputVal","setInputVal","aria-level","role","autoFocus","className","name","onChange","event","input","target","value","undefined","recommendations","length","filter","val","toLowerCase","includes","Array","from","Set","type","aria-placeholder","maxLength","style","maxHeight","overflow","position","zIndex","WebkitOverflowScrolling","i","key","onClick","useTime","Date","time","setTime","useEffect","interval","setInterval","clearInterval","prepData","TZ2","TZ1","ISOtime","toISOString","guess","firstTZ","now","firstAbbr","zone","abbr","secondAbbr","fmtTime1","format","fmtTime2","CurrentTime","setTZ2","minHeight","Footer","year","getFullYear","bottom","marginTop","paddingBottom","href","rel","FromToTime","guessedTZ","setTZ1","FutureConversion","chosenTime","convertedTime","mmChosenTime","mmConvTime","fromLbl","toLbl","ErrorAlert","msg","data-dismiss","aria-label","aria-hidden","Future","today","timeRightNow","date","setDate","err","setErr","setConvertedTime","setChosenTime","onSubmit","e","preventDefault","chosenDate","isValid","console","warn","unix","dateStr","timeStr","completeTimeStr","completeTime","indexOf","convTime","htmlFor","aria-describedby","max","min","Header","to","getSeconds","data-toggle","data-target","aria-controls","aria-expanded","Help","tzAbbr","background","borderRadius","padding","App","maxWidth","component","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.65c29cf3.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment-timezone';\n\nfunction AutoCompleteText({\n  autofocus = false,\n  changeValue,\n  clearInput,\n  defaultValue = '',\n  id,\n  placeholder,\n}) {\n  const options = moment.tz\n    .names()\n    .sort()\n    .map((el) => el.replace(/_/g, ' '));\n  const [suggestions, setSuggestions] = React.useState([]);\n  const [inputVal, setInputVal] = React.useState(\n    defaultValue.replace(/_/g, ' ')\n  );\n  function handleChange(event) {\n    const { value: input } = event.target;\n    if (clearInput) clearInput(undefined);\n    setInputVal(input);\n    let recommendations = [];\n    if (input.length) {\n      recommendations = [\n        ...recommendations,\n        ...options.filter((val) =>\n          val.toLowerCase().includes(input.toLowerCase())\n        ),\n      ];\n    }\n    setSuggestions(Array.from(new Set([...recommendations])));\n  }\n\n  function handleClick(value) {\n    setSuggestions([]);\n    setInputVal(value);\n    changeValue(value.replace(/ /g, '_'));\n  }\n\n  return (\n    <h4 aria-level=\"4\" id=\"converted-time-lbl\">\n      <input\n        role=\"searchbox\"\n        autoFocus={autofocus}\n        className=\"w-75\"\n        id={id}\n        name=\"converted-time-lbl-input\"\n        onChange={handleChange}\n        type=\"text\"\n        placeholder={placeholder}\n        aria-placeholder={placeholder}\n        value={inputVal}\n        maxLength={100}\n      />\n      <div\n        id=\"suggestion-list\"\n        style={{\n          maxHeight: '50vh',\n          overflow: 'scroll',\n          position: 'fixed',\n          zIndex: 2,\n          WebkitOverflowScrolling: 'touch',\n        }}\n      >\n        <h6 aria-level=\"6\">\n          <ul className=\"list-group\">\n            {suggestions.length > 0\n              ? suggestions.map((el, i) => (\n                  <li\n                    className=\"list-group-item list-group-item-action\"\n                    key={i}\n                    onClick={() => handleClick(el)}\n                  >\n                    {el.replace(/_/g, ' ')}\n                  </li>\n                ))\n              : null}\n          </ul>\n        </h6>\n      </div>\n    </h4>\n  );\n}\n\nexport default AutoCompleteText;\n","import React from 'react';\n\nfunction useTime() {\n  const [time, setTime] = React.useState(new Date());\n  function updateTime() {\n    setTime(new Date());\n  }\n  React.useEffect(() => {\n    let interval = setInterval(() => updateTime(), 1000);\n    return () => clearInterval(interval);\n  });\n  return time;\n}\n\nexport default useTime;\n","import moment from 'moment-timezone';\n\nfunction prepData(time, TZ2, TZ1 = '') {\n  const ISOtime = time.toISOString();\n  const tz = TZ1 || moment.tz.guess();\n  const firstTZ = tz.replace(/_/g, ' ');\n  const now = moment(ISOtime);\n  const firstAbbr = moment.tz.zone(tz).abbr(now);\n  const secondAbbr = moment.tz.zone(TZ2).abbr(now);\n  let fmtTime1 = now.tz(tz).format('HH:mm:ss MMM DD, YYYY');\n  let fmtTime2 = now.tz(TZ2).format('HH:mm:ss MMM DD, YYYY');\n  return {\n    firstAbbr,\n    firstTZ,\n    fmtTime1,\n    fmtTime2,\n    secondAbbr,\n  };\n}\n\nexport default prepData;\n","import React from 'react';\nimport AutoCompleteText from './autoCompleteText';\n\nimport useTime from './helpers/useTime';\nimport prepData from './helpers/prepData';\n\nfunction CurrentTime() {\n  const [TZ2, setTZ2] = React.useState('UTC');\n  const { firstAbbr, fmtTime1, fmtTime2, firstTZ, secondAbbr } = prepData(\n    useTime(),\n    TZ2\n  );\n  return (\n    <div className=\"time-conversion container\" style={{ minHeight: '75vh' }}>\n      <div className=\"row mb-3\" id=\"fromto\">\n        <div className=\"col text-right\" id=\"labels-from\">\n          <h1>From</h1>\n        </div>\n        <div className=\"col text-left\" id=\"labels-to\">\n          <h1>To</h1>\n        </div>\n      </div>\n      <div className=\"row mb-3\" id=\"labels\">\n        <div className=\"col text-right\" id=\"local-time-lbl-box\">\n          <h4 aria-level=\"4\" id=\"local-time-lbl\">\n            Local time ({firstTZ})\n          </h4>\n        </div>\n        <div className=\"col\" id=\"converted-time-lbl-box\">\n          <AutoCompleteText\n            autofocus={true}\n            changeValue={setTZ2}\n            defaultValue={TZ2}\n            id=\"converted-time-lbl-input\"\n            placeholder=\"Time zone\"\n          />\n        </div>\n      </div>\n      <div className=\"row\" id=\"times\">\n        <div className=\"col text-right\" id=\"local-time-box\">\n          <h4 aria-level=\"4\" id=\"local-time\">\n            {fmtTime1} ({firstAbbr})\n          </h4>\n        </div>\n        <div className=\"col\" id=\"converted-time-box\">\n          <h4 aria-level=\"4\" id=\"converted-time\">\n            {fmtTime2} ({secondAbbr})\n          </h4>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentTime;\n","import React from 'react';\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"w-100 mt-5\" style={{ bottom: 0 }}>\n      <hr style={{ marginTop: 0 }} />\n      <div\n        className=\"page-footer text-center ml-1 mr-1\"\n        style={{ paddingBottom: '5px' }}\n      >\n        Copyright &copy; {year}{' '}\n        <a\n          href=\"https://en.wikinews.org/wiki/User:Acagastya\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          acagastya\n        </a>\n        . This project is licensed under{' '}\n        <a\n          href=\"https://opensource.org/licenses/BSD-3-Clause\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          BSD-3-Clause license\n        </a>\n        .\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport AutoCompleteText from './autoCompleteText';\nimport moment from 'moment-timezone';\n\nimport useTime from './helpers/useTime';\nimport prepData from './helpers/prepData';\n\nfunction FromToTime() {\n  const guessedTZ = moment.tz.guess();\n  const [TZ1, setTZ1] = React.useState(guessedTZ);\n  const [TZ2, setTZ2] = React.useState('UTC');\n  const { firstAbbr, fmtTime1, fmtTime2, secondAbbr } = prepData(\n    useTime(),\n    TZ2,\n    TZ1\n  );\n  return (\n    <div className=\"time-conversion container\" style={{ minHeight: '75vh' }}>\n      <div className=\"row mb-3\" id=\"fromto\">\n        <div className=\"col text-right\" id=\"labels-from\">\n          <h1>From</h1>\n        </div>\n        <div className=\"col text-left\" id=\"labels-to\">\n          <h1>To</h1>\n        </div>\n      </div>\n      <div className=\"row mb-3\" id=\"labels\">\n        <div className=\"col text-right\" id=\"first-time-lbl-box\">\n          <AutoCompleteText\n            autofocus={true}\n            changeValue={setTZ1}\n            defaultValue={TZ1}\n            id=\"first-time-lbl-input\"\n            placeholder=\"First time zone\"\n          />\n        </div>\n        <div className=\"col\" id=\"second-time-lbl-box\">\n          <AutoCompleteText\n            changeValue={setTZ2}\n            defaultValue={TZ2}\n            id=\"second-time-lbl-input\"\n            placeholder=\"Second time zone\"\n          />\n        </div>\n      </div>\n      <div className=\"row\" id=\"times\">\n        <div className=\"col text-right\" id=\"first-time-box\">\n          <h4 aria-level=\"4\" id=\"first-time\">\n            {fmtTime1} ({firstAbbr})\n          </h4>\n        </div>\n        <div className=\"col\" id=\"second-time-box\">\n          <h4 aria-level=\"4\" id=\"second-time\">\n            {fmtTime2} ({secondAbbr})\n          </h4>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FromToTime;\n","import React from 'react';\nimport moment from 'moment-timezone';\n\nimport AutoCompleteText from '../comp/autoCompleteText';\n\nfunction Future() {\n  const now = moment(new Date());\n  const today = now.format('YYYY-MM-DD');\n  const guess = moment.tz.guess();\n  const timeRightNow = now.format('HH:mm');\n  const [date, setDate] = React.useState(today);\n  const [time, setTime] = React.useState(timeRightNow);\n  const [TZ1, setTZ1] = React.useState(guess);\n  const [TZ2, setTZ2] = React.useState('UTC');\n  const [err, setErr] = React.useState('');\n  const [convertedTime, setConvertedTime] = React.useState(undefined);\n  const [chosenTime, setChosenTime] = React.useState(undefined);\n  function handleDateChange(e) {\n    setDate(e.target.value);\n    setConvertedTime(undefined);\n  }\n\n  function handleTimeChange(e) {\n    setTime(e.target.value);\n    setConvertedTime(undefined);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // 0. Reset error\n    setErr('');\n    setConvertedTime(undefined);\n    setChosenTime(undefined);\n    // 1. validate chosen date\n    const chosenDate = moment(date);\n    if (!chosenDate.isValid()) {\n      setErr('Chosen date is not valid.');\n      console.warn(err);\n      return;\n    }\n    // 1.1 chosenDate is in the range\n    const epoch = moment('01-18-2038', 'MM-DD-YYYY');\n    if (epoch.unix() - chosenDate.unix() < 0) {\n      setErr('Chosen date is outside the maximum permissible limit.');\n      console.warn(err);\n      return;\n    }\n    // if (chosenDate.unix() - now.unix() < 0) {\n    //   setErr('Chosen date is in the past.');\n    //   console.log(err);\n    //   return;\n    // }\n\n    // 2. validate chosen time\n    const dateStr = chosenDate.format('YYYY-MM-DD');\n    const timeStr = time;\n    const completeTimeStr = `${dateStr} ${timeStr}`;\n    const completeTime = moment.tz(completeTimeStr, TZ1);\n    if (!completeTime.isValid) {\n      setErr('Error occurred while parsing time.');\n      console.warn(err);\n      return;\n    }\n    // 3. validate chosen timezone\n    if (moment.tz.names().indexOf(TZ1) < 0) {\n      setErr('Selected timezone does not exist.');\n      return;\n    }\n    // 4. validate set timezone\n    if (moment.tz.names().indexOf(TZ2) < 0) {\n      setErr('Destination timezone does not exist.');\n      return;\n    }\n    // 5. convert time\n    setChosenTime(completeTime.tz(TZ1).format('HH:mm:ss MMM DD, YYYY'));\n    const convTime = completeTime.tz(TZ2).format('HH:mm:ss MMM DD, YYYY');\n    setConvertedTime(convTime);\n  }\n\n  return (\n    <div className=\"container\" style={{ minHeight: '75vh' }}>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"choose-date\">Choose date</label>\n          <input\n            aria-describedby=\"choose-date\"\n            className=\"form-control\"\n            id=\"choose-date\"\n            max={'2038-01-18'}\n            min={now}\n            name=\"choose-date\"\n            onChange={handleDateChange}\n            placeholder=\"Enter date\"\n            type=\"date\"\n            value={date}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"choose-time\">Choose time</label>\n          <input\n            aria-describedby=\"choose-time\"\n            className=\"form-control\"\n            id=\"choose-time\"\n            name=\"choose-time\"\n            onChange={handleTimeChange}\n            placeholder=\"Enter time\"\n            type=\"time\"\n            value={time}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"choose-from-timezone\">Set timezone</label>\n          <AutoCompleteText\n            autofocus={false}\n            changeValue={setTZ1}\n            clearInput={setConvertedTime}\n            defaultValue={TZ1}\n            id=\"choose-from-timezone\"\n            placeholder=\"Set timezone\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"convert-to-timezone\">Convert to timezone</label>\n          <AutoCompleteText\n            autofocus={false}\n            changeValue={setTZ2}\n            clearInput={setConvertedTime}\n            defaultValue={TZ2}\n            id=\"convert-to-timezone\"\n            placeholder=\"Convert to timezone\"\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-success\">\n          Convert\n        </button>\n      </form>\n      {!!err === true ? (\n        <ErrorAlert msg={err} />\n      ) : !!convertedTime === true ? (\n        <FutureConversion\n          chosenTime={chosenTime}\n          convertedTime={convertedTime}\n          TZ1={TZ1}\n          TZ2={TZ2}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nfunction FutureConversion({ chosenTime, convertedTime, TZ1, TZ2 }) {\n  const mmChosenTime = moment(chosenTime, 'HH:mm:ss DD MMM, YYYY');\n  const mmConvTime = moment(convertedTime, 'HH:mm:ss MMM DD, YYYY');\n  const fromLbl = moment.tz.zone(TZ1).abbr(mmChosenTime);\n  const toLbl = moment.tz.zone(TZ2).abbr(mmConvTime);\n  return (\n    <div className=\"mt-5\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>{TZ1.replace(/_/g, ' ')}</h1>\n        </div>\n        <div className=\"col\">\n          <h1>{TZ2.replace(/_/g, ' ')}</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          {chosenTime} ({fromLbl})\n        </div>\n        <div className=\"col\">\n          {convertedTime} ({toLbl})\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ErrorAlert({ msg }) {\n  return (\n    <div\n      className=\"alert alert-warning alert-dismissible fade show\"\n      role=\"alert\"\n    >\n      {msg}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n\nexport default Future;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-danger mb-4\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <span role=\"img\" aria-label=\"time convertor\">\n          {new Date().getSeconds() % 2 ? '⏳' : '⌛️'}\n        </span>{' '}\n        time convertor\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/help\">\n              Help\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/future\">\n              Future\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/from-to\">\n              From-to\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment-timezone';\n\nfunction Help() {\n  const tz = moment.tz.guess();\n  const tzAbbr = moment.tz.zone(tz).abbr(moment());\n  return (\n    <div className=\"container\" style={{ minHeight: '75vh' }}>\n      <ol>\n        <li>\n          Use the{' '}\n          <Link\n            to=\"/\"\n            style={{\n              background: 'lavender',\n              borderRadius: '5px',\n              padding: '2px 5px',\n            }}\n          >\n            homepage\n          </Link>{' '}\n          to convert your <span className=\"font-weight-bold\">current time</span>{' '}\n          ({tzAbbr}) to other timezone.\n        </li>\n        <li>\n          Use the{' '}\n          <Link\n            to=\"/future\"\n            style={{\n              background: 'lavender',\n              borderRadius: '5px',\n              padding: '2px 5px',\n            }}\n          >\n            /future\n          </Link>{' '}\n          to convert a <span className=\"font-weight-bold\">future date</span>{' '}\n          between different timezones.\n        </li>\n        <li>\n          Use the{' '}\n          <Link\n            to=\"/from-to\"\n            style={{\n              background: 'lavender',\n              borderRadius: '5px',\n              padding: '2px 5px',\n            }}\n          >\n            /from-to\n          </Link>{' '}\n          to convert\n          <span className=\"font-weight-bold\"> current time</span> between\n          different timezones.\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nexport default Help;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport CurrentTime from './comp/currentTime';\nimport Footer from './comp/footer';\nimport FromToTime from './comp/fromToTime';\nimport Future from './comp/future';\nimport Header from './comp/header';\nimport Help from './comp/help';\n\nfunction App() {\n  return (\n    <Router>\n      <div\n        className=\"container-fluid\"\n        style={{\n          maxWidth: '100vw',\n          overflow: 'hidden',\n          padding: 0,\n        }}\n      >\n        <Header />\n        <Switch>\n          <Route component={Help} path=\"/help\" />\n          <Route component={FromToTime} path=\"/from-to\" />\n          <Route component={Future} path=\"/future\" />\n          <Route component={CurrentTime} path=\"/\" />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}